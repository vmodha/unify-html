"use strict";var precacheConfig=[["/index.html","e0a5f036d18c5f7cc78ae46206bb8efd"],["/static/css/main.69a20f81.css","225ec586f1c9cfa97ef937c9fd770205"],["/static/js/main.6de7ec50.js","068d141c04586aa6755a29e76ab67909"],["/static/media/0.f004d4c3.png","f004d4c3214a9e4ad4ceac6bb71e6f5b"],["/static/media/1.e35cb2d4.png","e35cb2d4b1d83c800d40d5ce560a4baa"],["/static/media/10.6fdae580.png","6fdae580eec7ca434cf2fe964a5a56cf"],["/static/media/2.c49361e0.png","c49361e0ba36813df5d533ecd2000efd"],["/static/media/3.d34ccbf7.png","d34ccbf7854a7903e95ed910f98e9f3c"],["/static/media/4.b648d919.png","b648d91973fabd4655443dcf2525da6d"],["/static/media/5.33624581.png","33624581d48989174fca6de687d10912"],["/static/media/6.839c5200.png","839c5200a6d585270d9dbacf3ef30172"],["/static/media/7.d40459fb.png","d40459fb8d9d4ccfb16a51420e91817c"],["/static/media/8.2bf9861a.png","2bf9861add1d792740ab402d7fe08054"],["/static/media/9.8d693cbb.png","8d693cbb6bcf608956cabaf6c9e50e8f"],["/static/media/header.d067a915.jpg","d067a9153a7c4e0786769af35bca9d1b"],["/static/media/image_first_modal.9c526c23.png","9c526c237e88e6fcd8856c8d509a9b77"],["/static/media/legend.a35bbb2f.png","a35bbb2fff73a906bf0a12903b11a318"],["/static/media/map_loading.e9fd119e.jpg","e9fd119ec1b81b582f27ab698375daed"],["/static/media/map_loading_mobile.b3d11a6e.jpg","b3d11a6e09377315d7db60e59f60e186"],["/static/media/peace.aca4e69c.jpg","aca4e69ca0bd08f608a80c412d96fac3"],["/static/media/powered.b6193850.png","b619385032237543fa14e26644abb365"],["/static/media/spin_loading.04775bef.gif","04775befae1b06341607dca4b5c336da"],["/static/media/unifyre.656a4c57.png","656a4c5742b37cedad1d1f3b35bf447e"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var c="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});